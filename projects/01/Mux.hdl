// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux.hdl

/**
 * Multiplexor:
 * out = a if sel == 0
 *       b otherwise
 */

CHIP Mux {
    IN a, b, sel;
    OUT out;

    PARTS:
      // Classical logic: (Sel ⊃ b) & (¬Sel ⊃ a)
      // Equivalent implication: (P ⊃ Q) ≡ ¬(P & ¬Q)
      // So: ¬(Sel & ¬b) & ¬(¬Sel & ¬a)
      Not(in=a, out=notA);
      Not(in=b, out=notB);
      Not(in=sel, out=notSel);

      // notAndSelNotB -> ¬(Sel & ¬b)
      And(a=sel, b=notB, out=andSelNotB);
      Not(in=andSelNotB, out=notAndSelNotB);

      // notAndNotSelNotA -> ¬(¬Sel & ¬a)
      And(a=notSel,b=notA,out=andNotSelNotA);
      Not(in=andNotSelNotA, out=notAndNotSelNotA);

      // notAndSelNotB & notAndNotSelNotA
      And(a=notAndSelNotB, b=notAndNotSelNotA, out=out);
}
